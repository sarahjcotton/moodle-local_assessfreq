{"version":3,"file":"override_modal.min.js","sources":["../src/override_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax'],\nfunction($,Str, ModalFactory, ModalEvents, Fragment, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var OverrideModal = {};\n    var contextid;\n    var modalObj;\n    var callback;\n    var quizid;\n    var userid;\n    var hoursFilter;\n\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>'\n        + '</p>';\n\n    /**\n     * Create the modal window.\n     *\n     * @private\n     */\n    const createModal = function() {\n        Str.get_string('loading', 'local_assessfreq').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: spinner,\n                large: true\n            })\n            .done((modal) => {\n                modalObj = modal;\n                // Explicitly handle form click events.\n                modalObj.getRoot().on('click', '#id_submitbutton', processModalForm);\n                modalObj.getRoot().on('click', '#id_cancel', function(e) {\n                    e.preventDefault();\n                    modalObj.setBody(spinner);\n                    modalObj.hide();\n                });\n            });\n            return;\n        }).catch(() => {\n            console.log(new Error('Failed to load string: loading'));\n        });\n    };\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const updateModalBody = function(quiz, user, formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        let params = {\n            'jsonformdata': JSON.stringify(formdata),\n            'quizid': quiz,\n            'userid': user\n        };\n\n        modalObj.setBody(spinner);\n        Str.get_string('useroverride', 'local_assessfreq').then((title) => {\n            modalObj.setTitle(title);\n            modalObj.setBody(Fragment.loadFragment('local_assessfreq', 'new_override_form', contextid, params));\n            return;\n        }).catch(() => {\n            console.log(new Error('Failed to load string: useroverride'));\n        });\n    };\n\n    /**\n     * Updates Moodle form with selected information.\n     *\n     * @param {Object} e\n     * @private\n     */\n    function processModalForm(e) {\n        e.preventDefault(); // Stop modal from closing.\n\n        // Form data.\n        let overrideform = modalObj.getRoot().find('form').serialize();\n        let formjson = JSON.stringify(overrideform);\n\n        // Handle invalid form fields for better UX.\n        // I hate that I had to use JQuery for this.\n        var invalid = $.merge(\n                modalObj.getRoot().find('[aria-invalid=\"true\"]'),\n                modalObj.getRoot().find('.error')\n        );\n\n        if (invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        // Submit form via ajax.\n        Ajax.call([{\n            methodname: 'local_assessfreq_process_override_form',\n            args: {\n                'jsonformdata': formjson,\n                'quizid': quizid\n            },\n        }])[0].done(() => {\n            // For submission succeeded.\n            modalObj.setBody(spinner);\n            modalObj.hide();\n            if (hoursFilter) {\n                callback(quizid, hoursFilter);\n            } else {\n                callback(quizid);\n            }\n        }).fail(() => {\n            // Form submission failed server side, redisplay with errors.\n            updateModalBody(quizid, userid, overrideform);\n        });\n    }\n\n    /**\n     * Display the Modal form.\n     */\n    OverrideModal.displayModalForm = function(quiz, user, hours = null) {\n        quizid = quiz;\n        userid = user;\n        hoursFilter = hours;\n        updateModalBody(quiz, user);\n        modalObj.show();\n    };\n\n    /**\n     * Initialise method for quiz dashboard rendering.\n     */\n    OverrideModal.init = function(context, callbackFunction, hours = null) {\n        contextid = context;\n        callback = callbackFunction;\n        hoursFilter = hours;\n        createModal();\n    };\n\n    return OverrideModal;\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","contextid","modalObj","callback","quizid","userid","hoursFilter","OverrideModal","spinner","createModal","get_string","then","title","create","type","types","DEFAULT","body","large","done","modal","getRoot","on","processModalForm","e","preventDefault","setBody","hide","catch","console","log","Error","updateModalBody","quiz","user","formdata","params","JSON","stringify","setTitle","loadFragment","overrideform","find","serialize","formjson","invalid","merge","length","first","focus","call","methodname","args","fail","displayModalForm","hours","show","init","context","callbackFunction"],"mappings":";;;;;;;AAuBAA,yCAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,cAC1F,SAASC,EAAEC,IAAKC,aAAcC,YAAaC,SAAUC,UAM7CC,UACAC,SACAC,SACAC,OACAC,OACAC,YANAC,cAAgB,SAQdC,QAAU,sFASVC,YAAc,WAChBb,IAAIc,WAAW,UAAW,oBAAoBC,MAAMC,QAEhDf,aAAagB,OAAO,CAChBC,KAAMjB,aAAakB,MAAMC,QACzBJ,MAAOA,MACPK,KAAMT,QACNU,OAAO,IAEVC,MAAMC,SACHlB,SAAWkB,OAEFC,UAAUC,GAAG,QAAS,mBAAoBC,kBACnDrB,SAASmB,UAAUC,GAAG,QAAS,cAAc,SAASE,GAClDA,EAAEC,iBACFvB,SAASwB,QAAQlB,SACjBN,SAASyB,gBAIlBC,OAAM,KACLC,QAAQC,IAAI,IAAIC,MAAM,uCAUxBC,gBAAkB,SAASC,KAAMC,KAAMC,eACjB,IAAbA,WACPA,SAAW,QAGXC,OAAS,cACOC,KAAKC,UAAUH,iBACrBF,YACAC,MAGdhC,SAASwB,QAAQlB,SACjBZ,IAAIc,WAAW,eAAgB,oBAAoBC,MAAMC,QACrDV,SAASqC,SAAS3B,OAClBV,SAASwB,QAAQ3B,SAASyC,aAAa,mBAAoB,oBAAqBvC,UAAWmC,YAE5FR,OAAM,KACLC,QAAQC,IAAI,IAAIC,MAAM,qDAUrBR,iBAAiBC,GACtBA,EAAEC,qBAGEgB,aAAevC,SAASmB,UAAUqB,KAAK,QAAQC,YAC/CC,SAAWP,KAAKC,UAAUG,kBAI1BI,QAAUlD,EAAEmD,MACR5C,SAASmB,UAAUqB,KAAK,yBACxBxC,SAASmB,UAAUqB,KAAK,WAG5BG,QAAQE,OACRF,QAAQG,QAAQC,QAKpBjD,KAAKkD,KAAK,CAAC,CACPC,WAAY,yCACZC,KAAM,cACcR,gBACNxC,WAEd,GAAGe,MAAK,KAERjB,SAASwB,QAAQlB,SACjBN,SAASyB,OACLrB,YACAH,SAASC,OAAQE,aAEjBH,SAASC,WAEdiD,MAAK,KAEJrB,gBAAgB5B,OAAQC,OAAQoC,wBAOxClC,cAAc+C,iBAAmB,SAASrB,KAAMC,UAAMqB,6DAAQ,KAC1DnD,OAAS6B,KACT5B,OAAS6B,KACT5B,YAAciD,MACdvB,gBAAgBC,KAAMC,MACtBhC,SAASsD,QAMbjD,cAAckD,KAAO,SAASC,QAASC,sBAAkBJ,6DAAQ,KAC7DtD,UAAYyD,QACZvD,SAAWwD,iBACXrD,YAAciD,MACd9C,eAGGF"}